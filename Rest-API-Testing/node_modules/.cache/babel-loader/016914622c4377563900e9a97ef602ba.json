{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woodw\\\\Documents\\\\GitHub\\\\React\\\\Rest-API-Testing\\\\src\\\\components\\\\NewTask\\\\NewTask.js\",\n    _s = $RefreshSig$();\n\nimport useHttp from '../../hooks/use-https';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const {\n    isLoading,\n    error\n  } = useHttp();\n\n  const enterTaskHandler = async taskText => {\n    const generatedId = Math.random().toString();\n    const createdTask = {\n      id: generatedId,\n      text: taskText\n    };\n    props.onAddTask(createdTask);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"cKIMo3mJdXuFlssOwehBCtAb7AM=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["useHttp","Section","TaskForm","NewTask","props","isLoading","error","enterTaskHandler","taskText","generatedId","Math","random","toString","createdTask","id","text","onAddTask"],"sources":["C:/Users/woodw/Documents/GitHub/React/Rest-API-Testing/src/components/NewTask/NewTask.js"],"sourcesContent":["import useHttp from '../../hooks/use-https';\n\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\n\nconst NewTask = (props) => {\n  const { isLoading, error} = useHttp();\n\n  const enterTaskHandler = async (taskText) => {\n    \n      const generatedId = Math.random().toString();\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n    \n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,uBAApB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAAA;;EACzB,MAAM;IAAEC,SAAF;IAAaC;EAAb,IAAsBN,OAAO,EAAnC;;EAEA,MAAMO,gBAAgB,GAAG,MAAOC,QAAP,IAAoB;IAEzC,MAAMC,WAAW,GAAGC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAApB;IACA,MAAMC,WAAW,GAAG;MAAEC,EAAE,EAAEL,WAAN;MAAmBM,IAAI,EAAEP;IAAzB,CAApB;IAEAJ,KAAK,CAACY,SAAN,CAAgBH,WAAhB;EAEH,CAPD;;EASA,oBACE,QAAC,OAAD;IAAA,wBACE,QAAC,QAAD;MAAU,WAAW,EAAEN,gBAAvB;MAAyC,OAAO,EAAEF;IAAlD;MAAA;MAAA;MAAA;IAAA,QADF,EAEGC,KAAK,iBAAI;MAAA,UAAIA;IAAJ;MAAA;MAAA;MAAA;IAAA,QAFZ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAlBD;;GAAMH,O;UACwBH,O;;;KADxBG,O;AAoBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}